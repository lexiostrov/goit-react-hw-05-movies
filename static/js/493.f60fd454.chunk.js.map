{"version":3,"file":"static/js/493.f60fd454.chunk.js","mappings":"yOAyCA,UApCa,WACX,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE2BC,EAAAA,EAAAA,MAF3B,OAEUC,EAFV,OAGUC,EAAWD,EAASE,KAAI,kBAAoB,CAChDC,MAD4B,EAAGA,MAE/BC,GAF4B,EAAUA,GAAV,IAI9BP,EAAeI,GAPnB,gDASII,IAAAA,OAAAA,QACE,uDAVN,0DADc,uBAAC,WAAD,wBAedC,EACD,GAAE,KAGD,2BACE,gCACE,wBAAI,oBACJ,wBACGV,EAAYM,KAAI,SAAAK,GAAK,OACpB,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAMH,IAA1B,SAAiCG,EAAMJ,SADhCI,EAAMH,GADK,UAS/B,C,8LCvCDK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECX,EAAiB,mCAAG,oGACRU,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,cACzBV,EADyB,yBAExBA,EAASW,KAAKC,SAFU,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,iBACXK,EADW,oBACQJ,EADR,oBADE,cACnBV,EADmB,yBAIlBA,EAASW,MAJS,2CAAH,sDAOXI,EAAO,mCAAG,WAAMD,GAAN,uFACEL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACgBJ,EADhB,oBADF,cACfV,EADe,yBAIdA,EAASW,KAAKK,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,uFACDL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACgBJ,EADhB,oBADC,cAClBV,EADkB,yBAIjBA,EAASW,KAAKC,SAJG,2CAAH,sDAOVM,EAAS,mCAAG,WAAMC,GAAN,uFACAV,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BS,EAD/B,gCADA,cACjBnB,EADiB,yBAIhBA,EAASW,KAAKC,SAJE,2CAAH,qD","sources":["components/pages/Home.jsx","components/servises/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../servises/Api';\nimport Notiflix from 'notiflix';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  const [dailyMovies, setDailyMovies] = useState([]);\n\n  useEffect(() => {\n    async function getDailyMovie() {\n      try {\n        const response = await getTrendingMovies();\n        const movieArr = response.map(({ title, id }) => ({\n          title,\n          id,\n        }));\n        setDailyMovies(movieArr);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Sorry, something went wrong, please try again later'\n        );\n      }\n    }\n    getDailyMovie();\n  }, []);\n\n  return (\n    <main>\n      <section>\n        <h1>Trending today</h1>\n        <ul>\n          {dailyMovies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'adbaaa313d0e444758a876cd96774671';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getOneMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["useState","dailyMovies","setDailyMovies","useEffect","getTrendingMovies","response","movieArr","map","title","id","Notiflix","getDailyMovie","movie","to","axios","KEY","data","results","getOneMovie","movieId","getCast","cast","getReviews","getMovies","query"],"sourceRoot":""}