{"version":3,"file":"static/js/990.137c7c2b.chunk.js","mappings":"wNA0CA,UAtCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAQH,GAFnC,OAEUI,EAFV,OAGIL,EAAUK,GAHd,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,wBACGF,EAAOU,KAAI,SAAAC,GAAK,OACf,2BACE,gBACEC,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxC,mDAENC,IAAKH,EAAMI,KACXC,MAAM,MACNC,QAAQ,UAEV,uBAAIN,EAAMI,QACV,yBAAG,cAAYJ,EAAMO,UAAU,SAZxBP,EAAMQ,GADA,KAkBtB,C,8LCvCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,IADjC,cACzBf,EADyB,yBAExBA,EAASiB,KAAKC,SAFU,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMvB,GAAN,uFACFkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,oBACQmB,EADR,oBADE,cACnBf,EADmB,yBAIlBA,EAASiB,MAJS,2CAAH,sDAOXlB,EAAO,mCAAG,WAAMH,GAAN,uFACEkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,4BACgBmB,EADhB,oBADF,cACff,EADe,yBAIdA,EAASiB,KAAKG,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMzB,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,4BACgBmB,EADhB,oBADC,cAClBf,EADkB,yBAIjBA,EAASiB,KAAKC,SAJG,2CAAH,sDAOVI,EAAS,mCAAG,WAAMC,GAAN,uFACAT,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BQ,EAD/B,gCADA,cACjBvB,EADiB,yBAIhBA,EAASiB,KAAKC,SAJE,2CAAH,qD","sources":["components/Casts/Casts.jsx","components/servises/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../servises/Api';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getActors() {\n      try {\n        const response = await getCast(movieId);\n        setActors(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getActors();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {actors.map(actor => (\n        <li key={actor.id}>\n          <img\n            src={\n              actor.profile_path\n                ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                : 'https://via.placeholder.com/200x300?text=No+foto'\n            }\n            alt={actor.name}\n            width=\"200\"\n            loading=\"lazy\"\n          />\n          <p>{actor.name}</p>\n          <p>Character: {actor.character} </p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'adbaaa313d0e444758a876cd96774671';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getOneMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["useState","actors","setActors","movieId","useParams","useEffect","getCast","response","console","log","getActors","map","actor","src","profile_path","alt","name","width","loading","character","id","axios","KEY","getTrendingMovies","data","results","getOneMovie","cast","getReviews","getMovies","query"],"sourceRoot":""}